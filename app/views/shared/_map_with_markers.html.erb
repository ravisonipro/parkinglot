<script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script>
<script src="//maps.google.com/maps/api/js?key=<%= @api_key %>"></script>

<div>
  <br>
  <%= image_tag "click.png", width: "80px"%> 
  <h2 style="text-align: center;">Double click any where on map and add your parking place..!</h2>
</div>
<div id="google_map"></div>
<% if current_page?(root_path) %>
  <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>
          <h4 class="modal-title" id="myModalLabel">Add parking place</h4>
        </div>
        <div class="modal-body">
          <% unless user_signed_in? %>
            <h3>Sorry..!</h3>
            <h3>you are not logged in, please log in first <%= link_to "Click to sign in", new_user_session_path, class: "btn btn-success"%> or <%= link_to "Click to sign up", new_user_registration_path, class: "btn btn-danger"%></h3>
          <% else %>
            <%= render 'parking_places/form' %>
          <% end %>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
          <!-- <button type="button" class="btn btn-primary">Save changes</button> -->
        </div>
      </div>
    </div>
  </div>
<% end %>
<script type="text/javascript">
  
  var map;
  var infoWindow;
  
  // markersData variable stores the information necessary to each marker
  var markersData = 
    [ 
      <% markars.each do |marker| %>
      {
        lat: <%= raw marker[:latitude] %> ,
        lng: <%= raw marker[:longitude] %>,
        city: "<%= raw marker[:city] %>",
        state: "<%= raw marker[:state] %>",
        address: "<%= raw marker[:address] %>",
        owner_name: "<%= raw marker[:owner_name] %>",
        owner_number: "<%= raw marker[:owner_number] %>",
        avail_spaces: "<%= raw marker[:avail_spaces] %>",
        total_spaces: "<%= raw marker[:total_spaces] %>",
        price: "<%= raw marker[:price] %>",
        time_start: "<%= raw marker[:time_start] %>",
        time_end: "<%= raw marker[:time_end] %>"
      },
    <% end %>
  ];

  function initialize() {
    // $.get("http://ipinfo.io", function (response) {
    //   var ip = response.ip;
    //   var request = $.ajax({
    //     url: "/visitors/get_coordinate",
    //     type: "GET",
    //     data: {ip : ip},
    //     success: function(result){
    //       $("#lat").val(result.lat);
    //       $("#long").val(result.long);
    //     }
    //   });
    // }, "jsonp");

    var mapOptions = {
      zoom: 17, //zoom level, 0 = earth view to higher value
      panControl: true, //enable pan Control
      zoomControl: true, //enable zoom control
      zoomControlOptions: {
      style: google.maps.ZoomControlStyle.SMALL //zoom control size
      },
      scaleControl: true, // enable scale control
      mapTypeId: google.maps.MapTypeId.ROADMAP // google map type
    };

    map = new google.maps.Map(document.getElementById('google_map'), mapOptions);

    // Try HTML5 geolocation
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function (position) {
        <% if current_user.latitude.nil? && current_user.longitude.nil?%>
          var pos = new google.maps.LatLng(position.coords.latitude,
          position.coords.longitude);
        <% else %>
          var pos = new google.maps.LatLng(current_user.latitude,
          current_user.longitude);
        <% end %>
        map.setCenter(pos);
      }, function () {
        alert("Your browser supports Geolocation, however you have it disabled!");
      });

    }else {
      // Browser doesn't support Geolocatio
      alert("Your browser does not support geolocation!");
    }

    // a new Info Window is created
    infoWindow = new google.maps.InfoWindow();

    // Event that closes the Info Window with a click on the map
    google.maps.event.addListener(map, 'click', function() {
      infoWindow.close();
    });

    var latlngbounds = new google.maps.LatLngBounds();
    
    <% if current_page?(root_path) %>
      map.set("disableDoubleClickZoom", true);
      google.maps.event.addListener(map, 'dblclick', function (e) {
        // alert("Latitude: " + e.latLng.lat() + "\r\nLongitude: " + e.latLng.lng());
        var marker = new google.maps.Marker({
          position: e.latLng, //map Coordinates where user right clicked
          map: map,
          draggable:true, //set marker draggable 
          animation: google.maps.Animation.DROP, //bounce animation
          title:"add place",
          icon: "/assets/pin_green.png" //custom pin icon
        });
        addressDetails(e.latLng.lat(), e.latLng.lng())
        google.maps.event.addListener(marker, 'click', function() {
        
          // Creating the content to be inserted in the infowindow
          var iwContent1 = '<div id="iw_container" style="height: 60px; width: 160px;">' +
                          '<b><div class="iw_owner_name">' + "<button class='btn btn-default logbutton btn-xs' data-toggle='modal' data-target='#myModal'>" + "+ Add place "+ "</button>" + '</div></b></div>';
            
          // including content to the Info Window.
          infoWindow.setContent(iwContent1);

          // opening the Info Window in the current map and at the current marker location.
          infoWindow.open(map, marker);
        });
      });
    <% end %>
    // Finally displayMarkers() function is called to begin the markers creation
    displayMarkers();
  }

  google.maps.event.addDomListener(window, 'load', initialize);

  // fill details in popup form
  function addressDetails(lat, long) {
    $.get("http://maps.googleapis.com/maps/api/geocode/json?latlng=" + lat + "," + long + "&sensor=false", function (response) {
      $(".form-control").val("");
      var addr = {};
      for (var ii = 0; ii < response.results[0].address_components.length; ii++){
        var street_number = route = street = city = state = zipcode = country = formatted_address = '';
        var types = response.results[0].address_components[ii].types.join(",");
        if (types == "street_number"){
          addr.street_number = response.results[0].address_components[ii].long_name;
        }
        if (types == "route" || types == "point_of_interest,establishment"){
          addr.route = response.results[0].address_components[ii].long_name;
        }
        if (types == "sublocality,political" || types == "locality,political" || types == "neighborhood,political" || types == "administrative_area_level_3,political"){
          addr.city = (city == '' || types == "locality,political") ? response.results[0].address_components[ii].long_name : city;
        }
        if (types == "administrative_area_level_1,political"){
          addr.state = response.results[0].address_components[ii].short_name;
        }
        if (types == "postal_code" || types == "postal_code_prefix,postal_code"){
          addr.zipcode = response.results[0].address_components[ii].long_name;
        }
        if (types == "country,political"){
          addr.country = response.results[0].address_components[ii].long_name;
        }
      }
      console.log(addr);
      $("#street_detail").val(addr.street_number);
      $("#address_detail").val(addr.route);
      $("#state_detail").val(addr.state);
      $("#city_detail").val(addr.city);
      $("#zip_detail").val(addr.zipcode);
    });
  }
    
  // This function will iterate over markersData array
  // creating markers with createMarker function
  function displayMarkers(){

    // this variable sets the map bounds according to markers position
    var bounds = new google.maps.LatLngBounds();
   
    // for loop traverses markersData array calling createMarker function for each marker 
    for (var i = 0; i < markersData.length; i++){

      var latlng = new google.maps.LatLng(markersData[i].lat, markersData[i].lng);
      var city = markersData[i].city;
      var state = markersData[i].state;
      var address = markersData[i].address;
      var owner_name = markersData[i].owner_name;
      var owner_number = markersData[i].owner_number;
      var avail_spaces = markersData[i].avail_spaces;
      var total_spaces = markersData[i].total_spaces;
      var price = markersData[i].price;
      var time_start = markersData[i].time_start;
      var time_end = markersData[i].time_end;

      createMarker(latlng, owner_name, owner_number, address, city, state, avail_spaces, total_spaces);

      // marker position is added to bounds variable
      bounds.extend(latlng);  
    }

    // Finally the bounds variable is used to set the map bounds
    // with fitBounds() function
    map.fitBounds(bounds);
  }

  // This function creates each marker and it sets their Info Window content
  function createMarker(latlng, owner_name, owner_number, address, city, state, avail_spaces, total_spaces){
    var marker = new google.maps.Marker({
      map: map,
      position: latlng,
      title: name
    });

    // This event expects a click on a marker
    // When this event is fired the Info Window content is created
    // and the Info Window is opened.
    google.maps.event.addListener(marker, 'click', function() {
      
      // Creating the content to be inserted in the infowindow
      var iwContent = '<div id="iw_container" style="height: 220px; width: 250px;">' + ' <img src="/assets/logo.png" alt="Smiley face" height="42" width="42">' +
                        'Address details: <b><div class="iw_owner_name">' + address + ', ' + city + ', ' + state  + '</div></b>' +
                        'Owner name: <b><div class="iw_owner_name ">' + owner_name + '</div></b>' +
                        'Owner number: <b><div class="iw_owner_number">' + owner_number + '</div></b>' + 
                        'Avail spaces: <b><div class="iw_avail_spaces">' + avail_spaces + '</div></b>' +
                        'Total spaces: <b><div class="iw_avail_spaces">' + total_spaces + '</div></b>' + 
                      '</div>';
        
      // including content to the Info Window.
      infoWindow.setContent(iwContent);

      // opening the Info Window in the current map and at the current marker location.
      infoWindow.open(map, marker);
    });
  }  
</script>
