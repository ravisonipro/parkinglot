<br><br>
<div class="container-fluid"> 
  <div class="col-lg-12 col-md-12 col-sm-12 cols-xs-12">
    
    <%= form_tag(update_address_details_path, :method=>'put', role: "form", html: { class: "register-form", id: "address"}) do %>
      <div class="col-lg-6 col-md-6 col-sm-6 cols-xs-6">
        <h3>please fill Your address details</h3>
        
        <div class="row" id="locationField">      
          <div class="col-md-12 col-sm-12 col-lg-12">
            <label for="Street">Address</label>
            <input id="autocomplete" placeholder="Enter your address" type="text" class="form-control"></input>
          </div>            
        </div>
        <div class="row">      
          <div class="col-md-12 col-sm-12 col-lg-12">
            <label for="Street">Street</label>
            <%= text_field_tag :street, "", class: "form-control", placeholder: "Enter Street name", id: "street_number" %>
            <!-- <input id="street_number" class="form-control"></input> -->
          </div>            
        </div>
        <div class="row">      
          <div class="col-md-12 col-sm-12 col-lg-12">
            <label for="City">City</label>
            <%= text_field_tag "user[city]", "", class: "form-control", placeholder: "Enter City name", id: "locality" %>
            <!-- <input class="field" id="locality"></input> -->
          </div>            
        </div>
        <div class="row">
          <div class="col-md-12 col-sm-12 col-lg-12">
            <label for="State">State</label>
            <%= text_field_tag :state, "", class: "form-control", placeholder: "Enter State name", id: "administrative_area_level_1" %>
            <!-- <input class="field" id="administrative_area_level_1"></input> -->
          </div>            
        </div>
       
        <div class="row">
          <div class="col-md-12 col-sm-12 col-lg-12">
            <label for="Zip">Zip</label>
            <%= text_field_tag :zip_code, "", class: "form-control", placeholder: "Enter Zip code", id: "postal_code" %>
            <!-- <input class="field" id="postal_code"></input>              -->
          </div>            
        </div>
        <div class="row">
          <div class="col-md-12 col-sm-12 col-lg-12">
            <label for="State">State</label>
            <%= text_field_tag :country, "", class: "form-control", placeholder: "Enter Country name", id: "country" %>
            <!-- <input class="field" id="country"></input> -->
          </div>            
        </div>
        <%= hidden_field_tag :latitude, "", id: "latitude"%>
        <%= hidden_field_tag :longitude, "", id: "longitude"%>
      </div>
      
      <div class="col-lg-12 col-md-6 col-sm-6 cols-xs-6">
        <div class="row">
          <br>
          <div class="col-md-6 col-sm-6 col-lg-6">
           <button class="btn btn-default logbutton">Save</button>           
          </div>          
        </div>      
      </div>
    <% end %>
  </div>
</div>
<br><br>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCUlP1HqZcwDwQ_AYXCdDIShlcebCNZV7k&libraries=places"></script>
<script type="text/javascript">
  // This example displays an address form, using the autocomplete feature
// of the Google Places API to help users fill in the information.

$("#autocomplete").on('focus', function () {
    geolocate();
});

var placeSearch, autocomplete;
var componentForm = {
    street_number: 'short_name',
    locality: 'long_name',
    administrative_area_level_1: 'short_name',
    country: 'long_name',
    postal_code: 'short_name'
};

function initialize() {
    // Create the autocomplete object, restricting the search
    // to geographical location types.
    autocomplete = new google.maps.places.Autocomplete(
    /** @type {HTMLInputElement} */ (document.getElementById('autocomplete')), {
        types: ['geocode']
    });
    // When the user selects an address from the dropdown,
    // populate the address fields in the form.
    google.maps.event.addListener(autocomplete, 'place_changed', function () {
        fillInAddress();
    });
}

// [START region_fillform]
function fillInAddress() {
    // Get the place details from the autocomplete object.
    var place = autocomplete.getPlace();

    document.getElementById("latitude").value = place.geometry.location.lat();
    document.getElementById("longitude").value = place.geometry.location.lng();

    for (var component in componentForm) {
        document.getElementById(component).value = '';
        document.getElementById(component).disabled = false;
    }

    // Get each component of the address from the place details
    // and fill the corresponding field on the form.
    for (var i = 0; i < place.address_components.length; i++) {
        var addressType = place.address_components[i].types[0];
        if (componentForm[addressType]) {
            var val = place.address_components[i][componentForm[addressType]];
            document.getElementById(addressType).value = val;
        }
    }
}
// [END region_fillform]

// [START region_geolocation]
// Bias the autocomplete object to the user's geographical location,
// as supplied by the browser's 'navigator.geolocation' object.
function geolocate() {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function (position) {
            var geolocation = new google.maps.LatLng(
            position.coords.latitude, position.coords.longitude);

            var latitude = position.coords.latitude;
            var longitude = position.coords.longitude;
            document.getElementById("latitude").value = latitude;
            document.getElementById("longitude").value = longitude;

            autocomplete.setBounds(new google.maps.LatLngBounds(geolocation, geolocation));
        });
    }

}

initialize();
// [END region_geolocation]
</script>